{"ast":null,"code":"import _classCallCheck from \"/Users/yunchu/Code/Projects/home-page/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yunchu/Code/Projects/home-page/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yunchu/Code/Projects/home-page/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yunchu/Code/Projects/home-page/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yunchu/Code/Projects/home-page/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yunchu/Code/Projects/home-page/src/App/Common/Popup/Popup.jsx\";\nimport React, { Component } from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Button from '../Button/Button';\nimport \"./Popup.scss\";\n\nvar Popup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Popup, _Component);\n\n  function Popup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Popup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Popup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      modal: false\n    };\n\n    _this.toggleHandler = function () {\n      _this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Popup, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"danger\",\n        onClick: this.toggleHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Click\"), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggleHandler,\n        className: \"popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleHandler,\n        className: \"popup_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Title\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Body Text\"), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggleHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"toogle\"))));\n    }\n  }]);\n\n  return Popup;\n}(Component);\n\nexport default Popup;","map":{"version":3,"sources":["/Users/yunchu/Code/Projects/home-page/src/App/Common/Popup/Popup.jsx"],"names":["React","Component","Modal","ModalHeader","ModalBody","ModalFooter","Button","Popup","state","modal","toggleHandler","setState","prevState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,WAAxC,QAA0D,YAA1D;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,cAAP;;IAEMC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAIRC,a,GAAgB,YAAM;AACpB,YAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAC1BH,UAAAA,KAAK,EAAE,CAACG,SAAS,CAACH;AADQ,SAAL;AAAA,OAAvB;AAGD,K;;;;;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,OAAO,EAAE,KAAKC,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,KAA1B;AAAiC,QAAA,MAAM,EAAE,KAAKC,aAA9C;AAA6D,QAAA,SAAS,EAAC,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAE,KAAKA,aAA1B;AAA0C,QAAA,SAAS,EAAC,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,KAAKA,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAHF,CAFF,CADF;AAYD;;;;EAxBiBT,S;;AA2BpB,eAAeM,KAAf","sourcesContent":["import React, {Component} from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\nimport Button from '../Button/Button';\nimport \"./Popup.scss\";\n\nclass Popup extends Component {\n  state = {\n    modal: false\n  }\n\n  toggleHandler = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }))\n  }\n\n  render() {\n    return(\n      <div>\n        <Button color=\"danger\" onClick={this.toggleHandler}>Click</Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggleHandler} className=\"popup\" >\n          <ModalHeader toggle={this.toggleHandler}  className=\"popup_title\" >Title</ModalHeader>\n          <ModalBody>Body Text</ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggleHandler}>toogle</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default Popup\n"]},"metadata":{},"sourceType":"module"}