{"ast":null,"code":"import _toConsumableArray from \"/Users/yunchu/Code/Projects/home-page/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/yunchu/Code/Projects/home-page/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yunchu/Code/Projects/home-page/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yunchu/Code/Projects/home-page/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yunchu/Code/Projects/home-page/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yunchu/Code/Projects/home-page/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yunchu/Code/Projects/home-page/src/App/Page/Portfolio/Work/Work.jsx\";\nimport React, { Component } from 'react';\nimport './Work.scss';\nimport SubNav from '../../../Common/Nav/SubNav';\nimport SubTitle from '../../../Common/MainTitle/SubTitle';\nimport Popup from '../../../Common/Popup/Popup';\nimport WorkGrid from './WorkGrid';\nimport { getWroks } from '../../../../services/workService';\nimport { getTypesData } from '../../../../services/typeService';\n\nvar Work =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Work, _Component);\n\n  function Work() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Work);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Work)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      worksData: [],\n      typesData: [],\n      isPopupOn: false,\n      currentWork: \"\",\n      currentTypeID: \"\"\n    };\n\n    _this.onClick = function (item) {\n      _this.setState({\n        currentTypeID: item.id\n      });\n    };\n\n    _this.popupToggleHandler = function () {\n      _this.setState(function (preState) {\n        return {\n          isPopupOn: !preState.isPopupOn\n        };\n      });\n    };\n\n    _this.currentWorkToggleHandler = function (work) {\n      var preWork = _this.state.currentWork;\n\n      _this.setState({\n        currentWork: work\n      });\n    };\n\n    _this.getFilteredWorksData = function () {\n      var _this$state = _this.state,\n          worksData = _this$state.worksData,\n          currentTypeID = _this$state.currentTypeID;\n      var filteredWorksData = currentTypeID === \"\" ? worksData : worksData.filter(function (work) {\n        var isExist = work.tags.find(function (tag) {\n          return tag.id === currentTypeID;\n        }) ? true : false;\n        return isExist;\n      });\n      return filteredWorksData;\n    };\n\n    return _this;\n  }\n\n  _createClass(Work, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var worksData = getWroks();\n      console.log(worksData);\n      this.setState({\n        worksData: worksData\n      });\n      var typesData = getTypesData();\n      var typesDataAddAll = [{\n        id: \"\",\n        name: \"All\"\n      }].concat(_toConsumableArray(typesData));\n      this.setState({\n        typesData: typesDataAddAll\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Filter works by current type\n      var filteredWorksData = this.getFilteredWorksData();\n      return React.createElement(\"div\", {\n        className: \"work\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(SubTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Recent Works\"), React.createElement(SubNav, {\n        data: this.state.typesData,\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(WorkGrid, {\n        filteredWorksData: filteredWorksData,\n        currentWorkToggleHandler: this.currentWorkToggleHandler,\n        popupToggleHandler: this.popupToggleHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Popup, {\n        isOn: this.state.isPopupOn,\n        onToggle: this.popupToggleHandler,\n        data: this.state.currentWork,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Work;\n}(Component);\n\nexport { Work as default };","map":{"version":3,"sources":["/Users/yunchu/Code/Projects/home-page/src/App/Page/Portfolio/Work/Work.jsx"],"names":["React","Component","SubNav","SubTitle","Popup","WorkGrid","getWroks","getTypesData","Work","state","worksData","typesData","isPopupOn","currentWork","currentTypeID","onClick","item","setState","id","popupToggleHandler","preState","currentWorkToggleHandler","work","preWork","getFilteredWorksData","filteredWorksData","filter","isExist","tags","find","tag","console","log","typesDataAddAll","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Work.scss';\nimport SubNav from '../../../Common/Nav/SubNav';\nimport SubTitle from '../../../Common/MainTitle/SubTitle';\nimport Popup from '../../../Common/Popup/Popup';\nimport WorkGrid from './WorkGrid';\nimport {getWroks} from '../../../../services/workService';\nimport {getTypesData} from '../../../../services/typeService';\nexport default class Work extends Component {\n\n  state = {\n    worksData: [],\n    typesData:[],\n    isPopupOn: false,\n    currentWork: \"\",\n    currentTypeID:\"\"\n  }\n\n  onClick = (item) => {\n    this.setState({currentTypeID:item.id});\n  }\n\n  popupToggleHandler = () => {\n    this.setState(preState => ({\n      isPopupOn: !preState.isPopupOn\n    }))\n  }\n\n  currentWorkToggleHandler = (work) => {\n    const preWork = this.state.currentWork;\n    this.setState({\n      currentWork: work\n    })\n  }\n\n  componentDidMount() {\n    const worksData = getWroks();\n    console.log(worksData);\n    this.setState({worksData});\n\n    const typesData = getTypesData();\n    const typesDataAddAll = [{id:\"\", name:\"All\"}, ...typesData];\n    this.setState({typesData: typesDataAddAll});\n  }\n\n  getFilteredWorksData = () => {\n    const {worksData, currentTypeID} = this.state;\n\n    const filteredWorksData = currentTypeID === \"\" ? \n    worksData:\n    worksData.filter(work => {\n      let isExist = work.tags.find(tag => tag.id === currentTypeID)? true : false;\n      return isExist;\n    })\n\n    return filteredWorksData;\n  }\n\n\n  render() {\n\n\n    // Filter works by current type\n    const filteredWorksData = this.getFilteredWorksData();\n\n\n    return (\n      <div className=\"work\">\n        <SubTitle>Recent Works</SubTitle>\n        <SubNav data={this.state.typesData} onClick={this.onClick} />\n        <WorkGrid filteredWorksData={filteredWorksData} currentWorkToggleHandler={this.currentWorkToggleHandler} popupToggleHandler={this.popupToggleHandler} />\n        <Popup isOn={this.state.isPopupOn} onToggle={this.popupToggleHandler} data={this.state.currentWork} />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}