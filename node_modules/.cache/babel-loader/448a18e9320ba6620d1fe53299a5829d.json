{"ast":null,"code":"import _classCallCheck from \"/Users/yunchu/Code/Projects/home-page/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yunchu/Code/Projects/home-page/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yunchu/Code/Projects/home-page/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yunchu/Code/Projects/home-page/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yunchu/Code/Projects/home-page/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yunchu/Code/Projects/home-page/src/App/Page/Portfolio/Work/Work.jsx\";\nimport React, { Component } from 'react';\nimport './Work.scss';\nimport Card from '../../../Common/Card/Card';\nimport SubNav from '../../../Common/Nav/SubNav';\nimport SubTitle from '../../../Common/MainTitle/SubTitle';\nimport Popup from '../../../Common/Popup/Popup';\nimport { getWroks } from '../../../../services/workService';\n\nvar Work =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Work, _Component);\n\n  function Work() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Work);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Work)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      worksData: [],\n      isPopupOn: false\n    };\n\n    _this.onClick = function () {\n      console.log(\"click!\");\n    };\n\n    _this.popupToggleHandler = function () {\n      _this.setState(function (preState) {\n        return {\n          isPopupOn: !preState.isPopupOn\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Work, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var worksData = getWroks();\n      console.log(worksData);\n      this.setState({\n        worksData: worksData\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var worksData = this.state.worksData;\n      return React.createElement(\"div\", {\n        className: \"work\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(SubTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Recent Works\"), React.createElement(\"div\", {\n        className: \"work-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, worksData.map(function (work) {\n        return React.createElement(\"div\", {\n          key: work.id,\n          className: \"work-grid__item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(Card, {\n          imgUrl: work.imgUrl,\n          type: work.type,\n          title: work.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }));\n      })), React.createElement(Popup, {\n        isOn: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Work;\n}(Component);\n\nexport { Work as default };","map":{"version":3,"sources":["/Users/yunchu/Code/Projects/home-page/src/App/Page/Portfolio/Work/Work.jsx"],"names":["React","Component","Card","SubNav","SubTitle","Popup","getWroks","Work","state","worksData","isPopupOn","onClick","console","log","popupToggleHandler","setState","preState","map","work","id","imgUrl","type","title"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,SAAQC,QAAR,QAAuB,kCAAvB;;IACqBC,I;;;;;;;;;;;;;;;;;UAEnBC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,SAAS,EAAE;AAFL,K;;UAKRC,O,GAAU,YAAM;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,K;;UAEDC,kB,GAAqB,YAAM;AACzB,YAAKC,QAAL,CAAc,UAAAC,QAAQ;AAAA,eAAK;AACzBN,UAAAA,SAAS,EAAE,CAACM,QAAQ,CAACN;AADI,SAAL;AAAA,OAAtB;AAGD,K;;;;;;;wCAEmB;AAClB,UAAMD,SAAS,GAAGH,QAAQ,EAA1B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,WAAKM,QAAL,CAAc;AAACN,QAAAA,SAAS,EAATA;AAAD,OAAd;AACD;;;6BAEQ;AAAA,UACAA,SADA,GACa,KAAKD,KADlB,CACAC,SADA;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAGE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,SAAS,CAACQ,GAAV,CAAc,UAAAC,IAAI;AAAA,eACjB;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAmB,UAAA,SAAS,EAAC,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AACE,UAAA,MAAM,EAAID,IAAI,CAACE,MADjB;AAEE,UAAA,IAAI,EAAGF,IAAI,CAACG,IAFd;AAGE,UAAA,KAAK,EAAGH,IAAI,CAACI,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADiB;AAAA,OAAlB,CADH,CAHF,EAeE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,CADF;AAmBD;;;;EA5C+BrB,S;;SAAbM,I","sourcesContent":["import React, { Component } from 'react';\nimport './Work.scss';\nimport Card from '../../../Common/Card/Card';\nimport SubNav from '../../../Common/Nav/SubNav';\nimport SubTitle from '../../../Common/MainTitle/SubTitle';\nimport Popup from '../../../Common/Popup/Popup';\nimport {getWroks} from '../../../../services/workService';\nexport default class Work extends Component {\n\n  state = {\n    worksData: [],\n    isPopupOn: false,\n  }\n\n  onClick = () => {\n    console.log(\"click!\");\n  }\n\n  popupToggleHandler = () => {\n    this.setState(preState => ({\n      isPopupOn: !preState.isPopupOn\n    }))\n  }\n\n  componentDidMount() {\n    const worksData = getWroks();\n    console.log(worksData);\n    this.setState({worksData});\n  }\n\n  render() {\n    const {worksData} = this.state;\n    return (\n      <div className=\"work\">\n        <SubTitle>Recent Works</SubTitle>\n        {/* <SubNav onClick={this.onClick} /> */}\n        <div className=\"work-grid\">\n          {worksData.map(work =>           \n            <div key={work.id} className=\"work-grid__item\">\n              <Card \n                imgUrl= { work.imgUrl }\n                type={ work.type }\n                title={ work.title }\n              />\n            </div>\n          )\n        }\n        </div>\n        <Popup isOn={true}/>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}